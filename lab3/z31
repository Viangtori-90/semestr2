import java.util.ArrayList;
import java.util.List;

public class z31 {
    
    public static void main(String[] args) {
        int maxD = 175; 
        int townsToVisit = 3; 
        List<Integer> distances = List.of(50, 55, 57, 58, 60); 
        
        Integer bestSum = chooseBestSum(maxDe, townsToVisit, distances);
        if (bestSum != null) {
            System.out.println("Максимальная сумма расстояний: " + bestSum);
        } else {
            System.out.println("Невозможно");
        }
    }

    public static Integer chooseBestSum(int targetDistance, int townsToVisit, List<Integer> distances) {
        List<Integer> bestCombination = new ArrayList<>();
        int maxSum = Integer.MIN_VALUE;

        for (int i = 0; i < distances.size(); i++) {
            for (int j = i + 1; j < distances.size(); j++) {
                for (int k = j + 1; k < distances.size(); k++) {
                    int currentSum = distances.get(i) + distances.get(j) + distances.get(k);
                    
                    if (currentSum <= targetDistance && currentSum > maxSum) {
                        maxSum = currentSum;
                    }
                }
            }
        }
        return maxSum == Integer.MIN_VALUE ? null : maxSum;
    }
}
